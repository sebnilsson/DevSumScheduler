@using DevSumScheduler.ViewModels

@model IEnumerable<ScheduleTable>

@helper RenderHeaderRow(IEnumerable<string> headers) {
    <tr>
        <th class="table-header">&nbsp;</th>

        @foreach (var header in headers)
        {
            <th class="table-header">@header</th>
        }
    </tr>
}

@helper RenderRow(ScheduleRow row, IEnumerable<string> headers)
{
    foreach (var header in headers)
    {
        var item = row.GetItemByLocation(header);
        if (item != null)
        {
            <td class="row-item row-item-multiple">
                @RenderItemContent(item)
            </td>
        }
    }
}

@helper RenderItemContent(ScheduleItem item, string location = null)
{
    <span class="item-title">@Html.Raw(item.Title)</span>
    <div class="clear"></div>
            
    if (!string.IsNullOrWhiteSpace(location))
    {
        <span class="item-location">
            <em>(@location)</em>
        </span>
        <div class="clear"></div>
    }
    
    if (!string.IsNullOrWhiteSpace(item.Speaker) || !string.IsNullOrWhiteSpace(item.SpeakerUrl))
    {
        <span class="item-speaker">
            @if (!string.IsNullOrWhiteSpace(item.SpeakerUrl))
            {
                <a href="@item.SpeakerUrl" class="fancybox">@Html.Raw(item.Speaker)</a>
            }
            else if (!string.IsNullOrWhiteSpace(item.Speaker))
            {
                @Html.Raw(item.Speaker)
            }
            <div class="clear"></div>
        </span>
    }
}

<h1>DevSum-scheduler</h1>

<div id="schedule-tables">
    @foreach (var table in Model)
    {
        <h2>@table.Title</h2>
        <table>
            <thead>
                @RenderHeaderRow(table.Headers)
            </thead>
            <tbody>
                @foreach (var row in table.Rows)
                {
                    <tr data-row-id="@table.GetRowId(row)">
                        <td class="row-item-time">@row.TimeText</td>
                        
                        @if (row.HasMultipleItems)
                        {
                            @RenderRow(row, table.Headers)
                        }
                        else
                        {
                            var item = row.Items.FirstOrDefault();
                            if (item != null)
                            {
                                <td class="row-item row-item-single" colspan="@table.Headers.Count">
                                    @RenderItemContent(item, item.Location)
                                </td>
                            }
                        }
                    </tr>
                }
            </tbody>
            @if (table.Rows.Count > 1)
            {
                <tfoot>
                    @RenderHeaderRow(table.Headers)
                </tfoot>
            }
        </table>
    }
</div>

<div class="clear"></div>
<div id="bottom-toolbar" class="js">
    <a id="reset-choices" href="#">Clear track selections</a>
</div>
<div class="clear"></div>